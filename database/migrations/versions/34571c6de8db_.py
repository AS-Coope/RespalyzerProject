"""empty message

Revision ID: 34571c6de8db
Revises: a2e82a2e74e4
Create Date: 2023-04-09 10:48:20.928760

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '34571c6de8db'
down_revision = 'a2e82a2e74e4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('medical_centres',
    sa.Column('centre_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('geotag', sa.String(length=200), nullable=True),
    sa.Column('contact_number', sa.String(), nullable=True),
    sa.Column('contact_number2', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('centre_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(length=6), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('height', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('emergency contact',
    sa.Column('contact_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('contact', sa.String(length=200), nullable=True),
    sa.Column('contact_number', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('contact_id')
    )
    op.create_table('existing conditions',
    sa.Column('condition_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('condition', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('condition_id')
    )
    op.create_table('recordings',
    sa.Column('recording_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('recording', sa.String(length=200), nullable=True),
    sa.Column('reading', sa.String(length=200), nullable=True),
    sa.Column('date_recorded', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('recording_id')
    )
    op.drop_table('Recordings')
    op.drop_table('Emergency Contact')
    op.drop_table('User')
    op.drop_table('Medical Centres')
    op.drop_table('Existing Conditions')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Existing Conditions',
    sa.Column('condition_id', sa.INTEGER(), server_default=sa.text('nextval(\'"Existing Conditions_condition_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('condition', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], name='Existing Conditions_user_id_fkey'),
    sa.PrimaryKeyConstraint('condition_id', name='Existing Conditions_pkey')
    )
    op.create_table('Medical Centres',
    sa.Column('centre_id', sa.INTEGER(), server_default=sa.text('nextval(\'"Medical Centres_centre_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('geotag', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('contact_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contact_number2', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('centre_id', name='Medical Centres_pkey')
    )
    op.create_table('User',
    sa.Column('user_id', sa.INTEGER(), server_default=sa.text('nextval(\'"User_user_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(length=6), autoincrement=False, nullable=True),
    sa.Column('weight', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('height', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='User_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Emergency Contact',
    sa.Column('contact_id', sa.INTEGER(), server_default=sa.text('nextval(\'"Emergency Contact_contact_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('contact', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contact_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], name='Emergency Contact_user_id_fkey'),
    sa.PrimaryKeyConstraint('contact_id', name='Emergency Contact_pkey')
    )
    op.create_table('Recordings',
    sa.Column('recording_id', sa.INTEGER(), server_default=sa.text('nextval(\'"Recordings_recording_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('recording', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('reading', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('date_recorded', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], name='Recordings_user_id_fkey'),
    sa.PrimaryKeyConstraint('recording_id', name='Recordings_pkey')
    )
    op.drop_table('recordings')
    op.drop_table('existing conditions')
    op.drop_table('emergency contact')
    op.drop_table('user')
    op.drop_table('medical_centres')
    # ### end Alembic commands ###
